#!/bin/bash

usage() {
	echo "Usage:"
	echo "	./diceRoll <NdM>+, where N > 0 and M > 1"
	echo "	N is the number of dice, and M is the number of sides on each dice"
	echo "Example:"
	echo "	./diceRoll 4d6 3d20 (rolls 4 6-sided dice and 3 20-sided dice)"
}

# print usage message if no arguments or if one of them is "-h"
if [[ -z "$@" ]] || [[ "$@" =~ "-h" ]]; then
	usage && exit
fi

res_col=$(tput setaf 1; tput bold) # color for final result dice roll, red
ind_col=$(tput setaf 2) # color for individual dice rolls, green
def_col=$(tput sgr0) # resets color to default

rolls=($@)

# handle file of rolls
for i in ${rolls[@]}; do
	if [ -f "$i" ]; then
		fileRolls=$(cat $i | sed "s/\n//") # remove newlines
		rolls+=($fileRolls) # create array from rolls in file
		rolls=(${rolls[@]/$i}) # remove filename from array
	fi
	! [ -s "$i" ] && echo "$i is empty"
done

for i in ${rolls[@]}; do
	# {x%y*} - delete chars after and including y in string x
	# {x#*y} - delete chars before and including y in string x
	if [[ $i =~ ^[0-9]+d[0-9]+$ ]] && N="${i%d*}" && M="${i#*d}" && [ "$N" -gt "0" ] && [ "$M" -gt "1" ]; then
		res=0
		arr=''
		for j in $(seq 1 $N); do
			x=$[RANDOM%$M+1] # roll the dice
			((res+=$x)) # add roll to result
			arr+="$x " # add roll to string of rolls to print at the end
		done
		echo "$i - $ind_col$arr$def_col: $res_col$res$def_col" # print results with colors
	else
		echo "$i -- Not a valid dice roll entry"
	fi
done
